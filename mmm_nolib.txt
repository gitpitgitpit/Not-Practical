import math
import matplotlib.pyplot as plt

# Generate a random dataset
data_x = [9.8, 10.5, 11.2, 9.0, 10.6, 12.0, 10.2, 11.5, 9.7, 11.8]
data_y = [19.2, 21.5, 23.0, 18.5, 20.4, 24.8, 20.0, 22.8, 18.7, 23.5]

# Compute statistical measures
mean_x = sum(data_x) / len(data_x)
variance_x = sum((xi - mean_x) ** 2 for xi in data_x) / len(data_x)
std_dev_x = math.sqrt(variance_x)

mean_y = sum(data_y) / len(data_y)
variance_y = sum((yi - mean_y) ** 2 for yi in data_y) / len(data_y)
std_dev_y = math.sqrt(variance_y)

covariance_xy = sum((xi - mean_x) * (yi - mean_y) for xi, yi in zip(data_x, data_y)) / len(data_x)
correlation_xy = covariance_xy / (std_dev_x * std_dev_y)
standard_error_x = std_dev_x / math.sqrt(len(data_x))

# Display statistical measures
print(f"Mean of X: {mean_x}")
print(f"Variance of X: {variance_x}")
print(f"Standard Deviation of X: {std_dev_x}")
print(f"Mean of Y: {mean_y}")
print(f"Variance of Y: {variance_y}")
print(f"Standard Deviation of Y: {std_dev_y}")
print(f"Covariance between X and Y: {covariance_xy}")
print(f"Correlation between X and Y: {correlation_xy}")
print(f"Standard Error of X: {standard_error_x}")

# Display the distribution graphically
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.hist(data_x, bins=20, color='blue', alpha=0.7)
plt.title('Histogram of X')

plt.subplot(1, 2, 2)
plt.scatter(data_x, data_y, color='red', alpha=0.7)
plt.title('Scatter Plot of X and Y')

plt.show()
